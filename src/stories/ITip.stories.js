import ITip from "../components/ITip/ITip.vue";

export default {
  title: "Components/I-Tip",
  component: ITip,
  tags: ["autodocs"],
  argTypes: {
    position: {
      control: "select",
      options: ["top", "right", "bottom", "left"],
      description: "–ü–æ–∑–∏—Ü–∏—è –ø–æ—è–≤–ª–µ–Ω–∏—è —Ç—É–ª—Ç–∏–ø–∞ –æ—Ç–Ω–æ—Å–∏—Ç–µ–ª—å–Ω–æ —Ç—Ä–∏–≥–≥–µ—Ä–∞"
    },
    openDelay: {
      control: "number",
      description: "–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –æ—Ç–∫—Ä—ã—Ç–∏–µ–º (–º—Å)"
    },
    closeDelay: {
      control: "number",
      description: "–ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ –∑–∞–∫—Ä—ã—Ç–∏–µ–º (–º—Å)"
    },
    openOnClick: {
      control: "boolean",
      description: "–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç—É–ª—Ç–∏–ø –ø–æ –∫–ª–∏–∫—É"
    },
    openOnHover: {
      control: "boolean",
      description: "–û—Ç–∫—Ä—ã–≤–∞—Ç—å —Ç—É–ª—Ç–∏–ø –ø–æ –Ω–∞–≤–µ–¥–µ–Ω–∏—é"
    },
    tip: {
      control: "text",
      description: "–¢–µ–∫—Å—Ç —Ç—É–ª—Ç–∏–ø–∞ (–µ—Å–ª–∏ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è —Å–ª–æ—Ç `tip`)"
    },
    permanent: {
      control: "boolean",
      description: "–î–µ—Ä–∂–∞—Ç—å —Ç—É–ª—Ç–∏–ø –≤—Å–µ–≥–¥–∞ –æ—Ç–∫—Ä—ã—Ç—ã–º"
    },
    maxWidth: {
      control: "text",
      description: "–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Ç—É–ª—Ç–∏–ø–∞"
    },
    minWidth: {
      control: "text",
      description: "–ú–∏–Ω–∏–º–∞–ª—å–Ω–∞—è —à–∏—Ä–∏–Ω–∞ —Ç—É–ª—Ç–∏–ø–∞"
    }
  },
  args: {
    tip: "–ü–æ–¥—Å–∫–∞–∑–∫–∞: –Ω–∞–≤–µ–¥–∏ –∏–ª–∏ –∫–ª–∏–∫–Ω–∏",
    position: "top",
    openDelay: 200,
    closeDelay: 200,
    openOnClick: false,
    openOnHover: true,
    permanent: false
  },
  parameters: {
    layout: "centered"
  },
  decorators: [
    () => ({
      template: `
        <div style="min-height: 180px; display: flex; justify-content: center; align-items: center;">
          <story />
        </div>
      `
    })
  ]
};

export const Default = (args) => ({
  components: { ITip },
  setup() {
    return { args };
  },
  template: `
    <ITip v-bind="args">
      <button>–ù–∞–≤–µ–¥–∏ —Å—é–¥–∞</button>
    </ITip>
  `
});

export const CustomSlot = (args) => ({
  components: { ITip },
  setup() {
    return { args };
  },
  template: `
    <ITip v-bind="args">
      <button>–°–ª–æ—Ç —Å –∫–∞—Å—Ç–æ–º–Ω—ã–º —Ç—É–ª—Ç–∏–ø–æ–º</button>
      <template #tip>
        <strong>üî• –ì–∏–±–∫–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç!</strong><br/>
        –ú–æ–∂–Ω–æ –≤—Å—Ç–∞–≤–∏—Ç—å HTML –∏–ª–∏ –¥—Ä—É–≥–æ–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç.
      </template>
    </ITip>
  `
});
